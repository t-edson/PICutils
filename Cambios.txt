1.4
===
Se cambian los nombres de algunos tipos en Pic16Utils.pas
Se agrega el método TPIC16.codInsert().
Se incluyen unidades nuevas para definir a los PIC del la linea "Baseline".
Se crea la unidad PicCore, para incluir definiciones comunes a todos los núcleos 
de PIC.
Se cambia el nombre de los identificadores de TPIC16Inst.


1.3
===
Se cambia la forma de trabajo, en algunas rutinas, para especificar direcciones de 
memoria. Ahora se usa el campo "addr" para almacenar la dirección base, en lugar
de usar los campos "offs" y "bank".



1.2
===
Se elimina el método TRAMBank.GetFreeBytes() y se modifica TPIC16.GetFreeBytes()
para que trabaje directamente sin llamar a TRAMBank.GetFreeBytes().
Se elimina TRAMBank.TotalGPR() y se modifica TPIC16.TotalMemRAM() para que haga
el cálculo directamente y se aprovecha también para corregir el cálculo.
Se elimina TRAMBank.GetFreeByte().
Se elimina TRAMBank.ExploreUsed() y se modifica TPIC16.ExploreUsed() para trabajar
directamente sin llamar a TRAMBank.ExploreUsed().
Se elimina TRAMBank.AvailBit().
Se modifica TPIC16.Disassembler() para que pida el OpCode como parámetro.
Se hacen públicas las propiedades idIns, d_, f_, b_ y  k_. 

1.1
===
Se modifica TPIC16.GenHex(), para que incluya dentro de sí, las funcionalidades de 
TPIC16.GenHexData(), y se elimina TPIC16.GenHexData(), así como las funciones
TFlashPage.StartHex() y TFlashPage.ExtractHex(), porque ya no son necesarias.
Se modifica TPIC16.UsedMemFlash(), para no hacer uso de las páginas, y se elimina
TFlashPage.Used().
Se elimina TPIC16.ShowCode(), y se incluye su funcionalidad (sin manejo de páginas)
en TPIC16.DumpCode().
Se eliminan los campos minUsed, maxUsed, iHex y nUsed de TFlashPage, porque ya no 
se usan. 
Se implementa el método TPIC16.ExecNCycles(), y se implementa el conteo de ciclos
de ejecución.
Se incluyen condiciones para la detención de la ejecución.
Se incluye el evento TPIC16.OnExecutionMsg.
Se incluyen campos de posición, a la clase TPIC16FlashCell, para facilitar la 
depuración. 
Se incluye el método TPIC16.addPosInformation(), para agregar información de 
ubicación.
Se incluye el método TPIC16.MapPORTtoPIN() para mapear memoria RAM a pines físicos.
Se crea el campo TPIC16RamCell.Fimplem.
Se corrige un error en la ejecución de las instrucciones RLF y RRF.
Se define información detallada de hardware para los PIC16F84/84A y PIC16F877/877A.

1.0
===
Se mueve el método GetFreeBit() de TRAMBank a TPIC16.
Se convierte el campo TPIC16RamCell.used, a propiedad, y se crea el campo 
TPIC16RamCell.mappedTo.
Se convierte el campo TPIC16RamCell.value, a propiedad.
Se elimina el método TRAMBank.Getmem() y la propiedad TRAMBank.mem[]
Se elimina el estado "Mapped" de TPIC16CellState.
Se crean los métodos TPIC16.SetStateRAMCom() y TPIC16.SetMappRAMCom(), que
permiten definir las memorias, por comandos.
Se hacen públicos, los campos que modelan la memoria en TPIC16, y se crean nuevos
campos.
Se elimina el campo "TRAMBank.BankMapped", porque ya no es usado.
Se implementan diversas instrucciones de TPIC16.Exec(), para simular la ejecución de
instrucciones dentro del PIC.
Se crea el método TPIC16.ExecTo(().
Se eliminan los campos TPIC16.GPRStart y TRAMBank.GPRStart, porque complican la 
actualización, cuando se definen zonas de memoria.
Se elimina TRAMBank.UsedGPR() y se modifica TPIC16.UsedMemRAM, para que lea 
directamente de ram[].

0.9
===
Se agrega soporte para los PIC PIC16C63, PIC16CR63, PIC16C65, PIC16C65A, PIC16CR65 y 
PIC16F72.
Se modifica TPIC16.GenHex(), para que incluya los bits de configuración.
Se agregan las propiedades TPIC16.Bank[] y TPIC16.Pages[].
Se hacen públicas las propiedades Decode() y Disassembler().
Se crean campos para modelar a los registros internos del PIC.
Se crea el método TPIC16.Reset().

0.8
===
Se crea el método TPIC16.codCallAt()
Se agrega protección de dirección a TPIC16.codGotoAt().
Se traducen algunos mensajes al inglés.
Se modifica TPIC16.addTopComm(), para que acepte un parámetro más.
Se incluye el parámetro "incVarNam", en TPIC16.DumpCode(), para activar/desactivar
el uso de nombres de las variables.
Se agregan máscaras de protección para los parámetros de TPIC16.codAsmFD(),
TPIC16.codAsmF() y TPIC16.codAsmFB().

0.7
===
Se agrega protección a la codificación de las rutinas CALL y GOTO.
Se elimina la función TPIC16.FreeMemRAM(), porque no se estaba usando.
Se define que TPIC16.MaxFlash, indique siempre el tamaño de la memoria Flash.
Se elimina TPIC16.TotalMemFlash(). 
Se incluye el campo MsjError, para devolver mensajes de error.
Se crea el campo TPIC16FlashCell.topComment, para alojar a los comentarios del código.
Se crea el campo TPIC16FlashCell.topLabel, para alojar a las etiquetas del código.
Se cambiar de nombre al campo TPIC16FlashCell.Comment por sideComment.
Se cambia el nombre y código de los métodos que manejan comentarios, para adecuarse a
los nuevos campos.


0.6
===
Se amplían las rutinas para que consideren el caso de un solo banco de RAM.
Se agrega el método TRAMBank.ExploreUsed(), para explorar la memoria usada.
Se agrega el método TPIC16.ExploreUsed(), para explorar la memoria usada.
Se agrega el campo TRAMBank.numBank y se incluye la inicializació en el método Inic().
Se agregan parámetros al método TPIC16.ShowCode(), para configurar la apariencia.
Se modifica GetHardwareInfo(), para que actualice también el campo "Model" del PIC.
Se agrega el campo "bitname" al registro TPICRamCell.
Se agregan los métodos TPIC16.NameRAM(), TPIC16.AddNameRAM() y SetNameRAMbit().
Se modifica TPIC16.Disassembler(), para que incluya nombre de variables de tipo bit, y 
se incluye el formato "0x", para los números en hexadecimal.

0.5
===
Se cambia el nombre del tipo ptrPIC16Ram a PIC16RamPtr.
Se crea el tipo TPIC16RamCellPtr.
Se cambia el tipo de TRAMBank.mem[] a TPIC16RamCellPtr;
Se cambia el nombre de TRAMBank.ram por TRAMBank.ramPtr
Se corrige TRAMBank.GetFreeBit(), para que actualice correctamente el bit usado.
Se corrige un eror en TPIC16.codAsmFD(), en la instrucción ANDWF.
Se modifica la rutina TPIC16.GetFreeBytes(), para manejar casos de un solo banco.

0.4
===
* Se crea una nueva forma de la sintaxis ("a") usada para llenar la tabla PIC16InstSyntax[].
* Se cambia de nombre a las instrucciones codAsm(), en lugar de sobrecargarlas, para hacerlas
menos propensas a confusión y separar mejor a las categorías.
* Se crean dos nuevas formas de las instruccioens codASM(), para separar claramente las
sintaxis de todas las instrucciones.
* Se agrega nuevos campos a TPIC16, para modelar mejor la arquitectura del PIC
* Se hacen públicos algunos campos, para facilitar la configuración del hardware
* Se crea el tipo TPIC16CellState, para dar más información sobre la celda de memoria.
* Se modifica el objeto TRAMBank para trabajar con TPIC16CellState.
* Se elimina la propiedad CommonRAM, porque era muy general.
* Se modifica InitStateMem(), para limitar la dirección a 7 bits.
* Se agrega la unidad PIC16Devices, para incluir las rutinas de configuración de las
arquitecturas de los PIC.
